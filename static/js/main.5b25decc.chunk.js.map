{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","Editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attatchmentUrl","toggleEditing","update","ModifiedAt","Date","now","autoFocus","attachmentUrl","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuid4","putString","response","getDownloadURL","collection","add","createdAt","creatorId","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedin","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","userObject","setUserObject","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b25decc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,//\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [newAccount,setNewAccount] = useState(true);\r\n    const [error,setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name,value}} = event;\r\n        if(name===\"email\"){\r\n            setEmail(value)\r\n        }else if(name===\"password\"){\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            if(newAccount){\r\n                await authService.createUserWithEmailAndPassword(email,password);\r\n            }else{\r\n                await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n        }catch(error){\r\n            console.log(error.message);\r\n            setError(error.message);\r\n        }\r\n    } \r\n\r\n    const toggleAccount = () => setNewAccount((prev)=>!prev);\r\nreturn (\r\n    <>\r\n    <form onSubmit={onSubmit} className=\"container\">\r\n        <input className = \"authInput\" name = \"email\" type=\"email\" placeholder=\"Email\" value={email} required   onChange = {onChange}/>\r\n        <input className = \"authInput\" name = \"password\" type=\"password\" placeholder=\"password\" value={password} required  onChange = {onChange}/>\r\n        <input className = \"authInput authSubmit\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log in \"}/> \r\n        {error && <span className=\"authError\">{error}</span>}\r\n    </form>\r\n    <span onClick={toggleAccount} className=\"authSwitch\"> {newAccount ? \"Sign in\" : \"Create Account\"}</span>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {authService, firebaseInstance} from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () =>{ \r\n    \r\n    const onSocialClick = async (event) =>{\r\n        const {target:{name}} = event;\r\n        let provider;\r\n        if(name ===\"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n    <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) =>{\r\n\r\n    const [Editing,setEditing] = useState(false);\r\n    const [newNweet,setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async (event) => {\r\n        const ok = window.confirm(\"Are you sure want to Delete this tweet??\");\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attatchmentUrl).delete();\r\n        }else{\r\n\r\n        }\r\n    }\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n            ModifiedAt: Date.now(),\r\n        });\r\n        setEditing(false); \r\n    }\r\n    const onChange = (event) => {\r\n        const {target: {value}} = event\r\n        setNewNweet(value);\r\n    }\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n    return <div className=\"nweet\">{\r\n            Editing ? (\r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input type = \"text\" placeholder = \"Edit your tweet\" value = {newNweet} onChange = {onChange} required autoFocus className = \"formInput\"/>\r\n                    <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                </form> \r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </span>\r\n                </>\r\n\r\n            ) : (\r\n                <>\r\n                 <h4>{nweetObj.text}</h4>\r\n                 {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl}  />}\r\n        {isOwner && (\r\n                <div className=\"nweet__actions\">\r\n                    <span onClick={onDeleteClick}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </span>\r\n                    <span onClick={toggleEditing}>\r\n                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                    </span>\r\n                </div>\r\n                )}  \r\n                </>\r\n\r\n            )\r\n        \r\n        }\r\n       \r\n    </div>\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from \"react\"\r\nimport { dbService, storageService } from \"fbase\";\r\nimport {v4 as uuid4} from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) =>{\r\n    \r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) =>{\r\n\r\n        if (nweet === \"\") {\r\n            return;\r\n          }\r\n\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuid4()}`);\r\n            const response = await attachmentRef.putString(attachment,\"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        });\r\n        \r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n        \r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {target: {value}} = event;\r\n        setNweet(value);\r\n    }\r\n    const onFileChange = (event) => {\r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget: {result}} = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n\r\n    }\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n          <input\r\n            className=\"factoryInput__input\"\r\n            value={nweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength={120}\r\n          />\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n            id=\"attach-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onFileChange}\r\n            style={{\r\n            opacity: 0,\r\n            }}\r\n        />\r\n        {attachment && (\r\n            <div className=\"factoryForm__attachment\">\r\n            <img\r\n                src={attachment}\r\n                style={{\r\n                backgroundImage: attachment,\r\n                }}\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                <span>Remove</span>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n            </div>\r\n        )}\r\n        </form>\r\n    //     <form onSubmit = {onSubmit}> \r\n    //     <input type=\"text\" value={nweet} placeholder=\"What's on your mind?\" maxLength ={120} onChange = {onChange}/>\r\n    //     <input type=\"file\" accept=\"image/*\" onChange = {onFileChange}/>\r\n    //     <input type=\"submit\" value=\"Nweet\"/>\r\n    //     {attatchment && \r\n    //     <div>\r\n    //         <img src={attatchment} width=\"50px\" height=\"50px\" alt=\"your img\"/>\r\n    //         <button onClick = {onClearAttatchmentClick}>Clear</button>\r\n    //     </div>}\r\n    // </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\"\r\nimport { dbService} from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\n\r\nimport NweetFactory from \"components/NweetFactory\";\r\nconst Home = ({userObj})=> {\r\n    \r\n    const [nweets, setNweets] = useState([]);\r\n    // const getNweets = async() =>{\r\n    //     const dbNweets = await dbService.collection(\"nweets\").get(); \r\n    //     console.log(dbNweets);\r\n    //     dbNweets.forEach(document => {\r\n    //         const nweetObject = {\r\n    //             ...document.data(),\r\n    //             id: document.id\r\n    //         };\r\n    //         setNweets((prev) => [nweetObject, ...prev]);\r\n    //     });\r\n\r\n    // }\r\n\r\n    useEffect(() => {\r\n        // getNweets();\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({id:doc.id, ...doc.data()}))\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return  <div className=\"container\">\r\n        <NweetFactory userObj = {userObj}/>\r\n    <div style={{marginTop: 30}}>\r\n        {nweets.map( nweet => (\r\n            <Nweet key = {nweet.id} nweetObj = {nweet} isOwner = {nweet.creatorId === userObj.uid}/>\r\n        ))}\r\n    </div>\r\n</div>\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","import React, { useEffect, useState } from \"react\"\r\nimport { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({userObj, refreshUser})=>{\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    useEffect(()=>{\r\n        getMyNweets();\r\n    },[]);\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const getMyNweets = async() => {\r\n        const nweets = await dbService.collection(\"nweets\").where(\"creatorid\",\"==\",userObj.uid).orderBy(\"createdAt\",\"asc\").get();\r\n        // console.log(nweets.docs.map((doc)=>doc.data()));\r\n    }\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n    const onSubmit= async(event) =>{\r\n        event.preventDefault();\r\n        if(newDisplayName !== userObj.displayName){\r\n            await  userObj.updateProfile({displayName:newDisplayName});\r\n        }\r\n        refreshUser();\r\n    }\r\n    return (\r\n    <div className=\"container\">\\\r\n     <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n    </form>\r\n    <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    );\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({refreshUser, isLoggedin, userObj})=>{\r\n    return <Router>\r\n        {isLoggedin && <Navigation userObj = {userObj}/>}\r\n        <Switch>\r\n            {isLoggedin ? \r\n             <div\r\n             style={{\r\n               maxWidth: 890,\r\n               width: \"100%\",\r\n               margin: \"0 auto\",\r\n               marginTop: 80,\r\n               display: \"flex\",\r\n               justifyContent: \"center\",\r\n             }}\r\n           >\r\n            <Route exact path = \"/\">\r\n                <Home userObj = {userObj}/>\r\n            </Route>\r\n            <Route exact path = \"/profile\">\r\n                <Profile userObj = {userObj} refreshUser = {refreshUser}/>\r\n            </Route>\r\n            </div>\r\n             : <Route exact path = \"/\"><Auth /></Route>}\r\n        </Switch>\r\n    </Router>\r\n}\r\n\r\nexport default AppRouter;","import React, {useState, useEffect} from \"react\"\nimport AppRouter from \"./Router\"\nimport {authService} from \"fbase\";\nfunction App() {\n  const[init, setInit] = useState(false);\n  const [isLoggedin, setIsLoggedIn] = useState(false);\n  const [userObject,setUserObject] = useState(null);\n    useEffect(()=>{\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setUserObject(\n           {\n            uid: user.uid,\n            displayName: user.displayName,\n            updateProfile: (args) => user.updateProfile(args)\n           }\n        );\n        setIsLoggedIn(true);\n      }else{\n        setUserObject(null);\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n      refreshUser();\n    });\n  },[]);\n\n  const refreshUser = () =>{\n    const user = authService.currentUser;\n    setUserObject({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  }\n  return (\n      <>\n      {init? <AppRouter refreshUser = {refreshUser} isLoggedin={isLoggedin} userObj = {userObject}/> : \"Initializing...\"}\n      {/* <footer>&copy; Nwitter {new Date().getFullYear()}</footer> */}\n      </>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}